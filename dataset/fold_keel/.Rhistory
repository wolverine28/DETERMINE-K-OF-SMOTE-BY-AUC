folds <- matrix(l[grep(setname,l)],ncol = 2,byrow = T)
folds
trainingsets <- list()
testsets <- list()
for(i in 1:nrow(folds)){
trainingsets[[i]] <- read.csv(folds[i,2])
testsets[[i]] <- read.csv(folds[i,1])
}
col <- ncol(trainingsets[[1]])
if(sum(trainingsets[[1]][,col])>500)
next
print(c(sum(trainingsets[[1]][,col]),ncol(trainingsets[[1]])))
smote_result <- array(NA,dim = c(k,20,4))
smote_result <- array(NA,dim = c(5,20,4))
testsets[1]
nrow(testsets[1])
nrow(testsets[[1]])
nrow(testsets[[1]][,col])
sum(testsets[[1]][,col])
testsets[[1]][,col]
sum(trainingsets[[1]][,col])
sum(trainingsets[[1]][,col])-1
sample(sum(trainingsets[[1]][,col])-1,1)
sample(sum(trainingsets[[1]][,col])-1,1)
sample(sum(trainingsets[[1]][,col])-1,1)
sample(sum(trainingsets[[1]][,col])-1,1)
sample(sum(trainingsets[[1]][,col])-1,1)
sample(sum(trainingsets[[1]][,col])-1,1)
sum(trainingsets[[1]][,col])-1i<-1
i<-1
res <- ubSMOTE(trainingsets[[i]][,-col], as.factor(trainingset[[i]][,col]), perc.over = N, k=kn,perc.under = 0)
res <- ubSMOTE(trainingsets[[i]][,-col], as.factor(trainingsets[[i]][,col]), perc.over = N, k=kn,perc.under = 0)
N <- trainingsets[[i]]
trainingsets[[i]]
trainingsets[[i]][,col]
N <- table(trainingsets[[i]][,col])
table(trainingsets[[i]][,col])
t <- table(trainingsets[[i]][,col])
t[1]
t[1]/t[2]
floor(t[1]/t[2])
290*8
t <- table(trainingsets[[i]][,col])
N<-floor(t[1]/t[2])*100
res <- ubSMOTE(trainingsets[[i]][,-col], as.factor(trainingsets[[i]][,col]), perc.over = N, k=kn,perc.under = 0)
kn <- sample(sum(trainingsets[[1]][,col])-1,1)
res <- ubSMOTE(trainingsets[[i]][,-col], as.factor(trainingsets[[i]][,col]), perc.over = N, k=kn,perc.under = 0)
# res[,3] <- as.factor(res[,3])
res <- cbind(res$X,res$Y)
colnames(res) <- colnames(trainingset)
colnames(res) <- colnames(trainingsets[[i]])
res <- rbind(trainingset[trainingsets[[i]][,col]==0,],res)
res <- rbind(trainingsets[[i]][trainingsets[[i]][,col]==0,],res)
res
res[,col] <- as.numeric(res[,col])
AUC <- ONENN(res,testset)
AUC <- ONENN(res,testsets[[i]])
AUC
print(paste(as.character(j),"--",as.character(i),"th folds SMOTE",as.character(j),"th measure :",as.character(AUC[1])))
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/results
ser_sm <- matrix(NA,nrow=0,ncol=4)
for(i in 1:nrow(folds)){
t <- table(trainingsets[[i]][,col])
N<-floor(t[1]/t[2])*100
#SMOTE
res <- ubSMOTE(trainingsets[[i]][,-col], as.factor(trainingsets[[i]][,col]), perc.over = N, k=kn,perc.under = 0)
# res[,3] <- as.factor(res[,3])
res <- cbind(res$X,res$Y)
colnames(res) <- colnames(trainingsets[[i]])
res <- rbind(trainingsets[[i]][trainingsets[[i]][,col]==0,],res)
res[,col] <- as.numeric(res[,col])
AUC <- ONENN(res,testsets[[i]])
print(paste(as.character(j),"--",as.character(i),"th folds SMOTE",as.character(j),"th measure :",as.character(AUC[1])))
ser_sm <- rbind(ser_sm,AUC)
}
ser_sm
smote_result[,j,]
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
setname
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
setwd("Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/dataset/class_noise_5%")
l <- dir()
l[gerp("con",l)]
l[grep("con",l)]
data <- read.csv(l[grep("con",l)],h=T)
data
head(data)
col <- ncol(data)
data[,col]
data[,col]%in%c(1,2,3)
data[data[,col]%in%c(1,2,3),]
data[,col]
data[,col]==0
data[data[,col]==0,col]
data[data[,col]==0,col] <- "pos"
data[data[,col]!="pos",col]
data[data[,col]!="pos",col] <- "neg"
data
data[,col]
data[,col]=="pos"
data[data[,col]=="pos",col]
data[data[,col]=="pos",col] <- 1
data[data[,col]!="pos",col]
data[data[,col]!=1,col]
data[data[,col]!=1,col] <- 0
data[,col] <- as.numeric(data[,col])
data
data[,coltable()])
table(data[,col])
l[grep("con",l)]
paste(l[grep("con",l)],"0vs1,2.csv")
paste(l[grep("con",l)],"0vs1,2.csv",sep="")
strsplit(l[grep("con",l)],5)
names <- strsplit(l[grep("con",l)],5)[1]
paste(names,"0vs1,2.csv",sep="")
names <- strsplit(l[grep("con",l)],5)[[1]][1]
paste(names,"0vs1,2.csv",sep="")
write.csv(data,paste(names,"0vs1,2.csv",sep=""))
l <- dir()
data <- read.csv(l[grep("eco",l)],h=T)
data
col <- ncol(data)
data[,col]%in%c(0,1,7)
data[data[,col]%in%c(0,1,7),]
data <- data[data[,col]%in%c(0,1,7),]
data[data[,col]==1,col] <- "pos"
data[data[,col]!="pos",col] <- "neg"
data[data[,col]=="pos",col] <- 1
data[data[,col]!=1,col] <- 0
data[,col] <- as.numeric(data[,col])
table(data[,col])
names <- strsplit(n,5)[[1]][1]
l <- dir()
n <- l[grep("eco",l)]
data <- read.csv(n,h=T)
col <- ncol(data)
data <- data[data[,col]%in%c(0,1,7),]
data[data[,col]==1,col] <- "pos"
data[data[,col]!="pos",col] <- "neg"
data[data[,col]=="pos",col] <- 1
data[data[,col]!=1,col] <- 0
data[,col] <- as.numeric(data[,col])
table(data[,col])
names <- strsplit(n,5)[[1]][1]
data
write.csv(data,paste(names,"0vs1,2.csv",sep=""))
l <- dir()
n <- l[grep("iri",l)]
data <- read.csv(n,h=T)
col <- ncol(data)
data <- data[data[,col]%in%c(0,1,2),]
data[data[,col]==1,col] <- "pos"
data[data[,col]!="pos",col] <- "neg"
data[data[,col]=="pos",col] <- 1
data[data[,col]!=1,col] <- 0
data[,col] <- as.numeric(data[,col])
table(data[,col])
names <- strsplit(n,5)[[1]][1]
write.csv(data,paste(names,"0vs1,2.csv",sep=""))
n <- l[grep("page",l)]
data <- read.csv(n,h=T)
col <- ncol(data)
data <- data[data[,col]%in%c(0,1,2),]
data[data[,col]==1,col] <- "pos"
data[data[,col]!="pos",col] <- "neg"
data[data[,col]=="pos",col] <- 1
data[data[,col]!=1,col] <- 0
data[,col] <- as.numeric(data[,col])
table(data[,col])
names <- strsplit(n,5)[[1]][1]
write.csv(data,paste(names,"0vs1,2.csv",sep=""))
n <- l[grep("pen",l)]
data <- read.csv(n,h=T)
col <- ncol(data)
data <- data[data[,col]%in%c(0,1,2),]
data[data[,col]==1,col] <- "pos"
data[data[,col]!="pos",col] <- "neg"
data[data[,col]=="pos",col] <- 1
data[data[,col]!=1,col] <- 0
data[,col] <- as.numeric(data[,col])
table(data[,col])
names <- strsplit(n,5)[[1]][1]
write.csv(data,paste(names,"0vs1,2.csv",sep=""))
n <- l[grep("pag",l)]
data <- read.csv(n,h=T)
col <- ncol(data)
data <- data[data[,col]%in%c(0,1,4),]
data[data[,col]==4,col] <- "pos"
data[data[,col]!="pos",col] <- "neg"
data[data[,col]=="pos",col] <- 1
data[data[,col]!=1,col] <- 0
data[,col] <- as.numeric(data[,col])
table(data[,col])
names <- strsplit(n,5)[[1]][1]
write.csv(data,paste(names,"0vs1,2.csv",sep=""))
n <- l[grep("pen",l)]
data <- read.csv(n,h=T)
col <- ncol(data)
data <- data[data[,col]%in%c(5,6,8),]
data[data[,col]==5,col] <- "pos"
data[data[,col]!="pos",col] <- "neg"
data[data[,col]=="pos",col] <- 1
data[data[,col]!=1,col] <- 0
data[,col] <- as.numeric(data[,col])
table(data[,col])
names <- strsplit(n,5)[[1]][1]
write.csv(data,paste(names,"0vs1,2.csv",sep=""))
n <- l[grep("sat",l)]
data <- read.csv(n,h=T)
col <- ncol(data)
data <- data[data[,col]%in%c(5,0,4),]
data[data[,col]==5,col] <- "pos"
data[data[,col]!="pos",col] <- "neg"
data[data[,col]=="pos",col] <- 1
data[data[,col]!=1,col] <- 0
data[,col] <- as.numeric(data[,col])
table(data[,col])
names <- strsplit(n,5)[[1]][1]
write.csv(data,paste(names,"0vs1,2.csv",sep=""))
n <- l[grep("win",l)]
data <- read.csv(n,h=T)
col <- ncol(data)
data <- data[data[,col]%in%c(1,0,2),]
data[data[,col]==0,col] <- "pos"
data[data[,col]!="pos",col] <- "neg"
data[data[,col]=="pos",col] <- 1
data[data[,col]!=1,col] <- 0
data[,col] <- as.numeric(data[,col])
table(data[,col])
names <- strsplit(n,5)[[1]][1]
write.csv(data,paste(names,"0vs1,2.csv",sep=""))
setwd("Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/results")
setwd("Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/results/SMOTE")
l <- dir()
l
m <- l[grep("PR",l)]
m
d <- read.csv(m[1],h=T)
d
d <- read.csv(m[1],h=T)[,-1]
d
apply(d,2,mean)
boxplot(apply(d,2,mean))
l <- dir()
m <- l[grep("PR",l)]
for(i in 1:length(m)){
d <- read.csv(m[i],h=T)[,-1]
boxplot(apply(d,2,mean))
}
for(i in 1:length(m)){
d <- read.csv(m[i],h=T)[,-1]
boxplot(apply(d,2,mean))
plot(apply(d,2,mean),type='l')
}
for(i in 1:length(m)){
d <- read.csv(m[i],h=T)[,-1]
boxplot(apply(d,2,mean))
plot(apply(d,2,mean),type='l',ylim=c(0,1))
}
for(i in 1:length(m)){
d <- read.csv(m[i],h=T)[,-1]
boxplot(apply(d,2,mean))
plot(apply(d,2,mean),type='l',ylim=c(0.5,1))
}
source('Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/experiment/SMOTE_exo.R', echo=TRUE)
setwd("Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/results/SMOTE")
l <- dir()
m <- l[grep("PR",l)]
for(i in 1:length(m)){
d <- read.csv(m[i],h=T)[,-1]
boxplot(apply(d,2,mean))
plot(apply(d,2,mean),type='l',ylim=c(0.5,1))
}
setwd("Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/results/test")
l <- dir()
m <- l[grep("PR",l)]
m
d <- read.csv(m[i],h=T)
m[1]
d <- read.csv(m[1],h=T)
d
s <- read.csv(m[2],h=T)
s
plot(apply(d,2,mean),type='l',ylim=c(0.5,1))
lines(apply(s,2,mean))
m <- l[grep("F",l)]
d <- read.csv(m[1],h=T)
s <- read.csv(m[2],h=T)
m
plot(apply(d,2,mean),type='l',ylim=c(0.5,1))
lines(apply(s,2,mean))
setwd("Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/dataset/keel")
l <- dir()
l
s <- dir()
for(s in 1:length(set)){
filename <- set[s]
data <- read.csv(file = filename,h=T)
print(set[s])
col <- ncol(data)
k = 5 #Folds
minor <- data[data[,col]==1,]
nrow(minor)
major <- data[data[,col]==0,]
nrow(major)
minor$id <- sample(1:nrow(minor))%%k+1
major$id <- sample(1:nrow(major))%%k+1
list <- 1:k
for (i in 1:k){
trainingset <- rbind(subset(minor, id %in% list[-i])[,-ncol(minor)],subset(major, id %in% list[-i])[,-ncol(major)])
testset     <- rbind(subset(minor, id %in% c(i))[,-ncol(minor)]    ,subset(major, id %in% c(i))[,-ncol(major)])
write.csv(trainingset,paste("Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/dataset/fold_keel/",filename,"_",as.character(i),"th_train.csv",sep=""),row.names = F)
write.csv(testset,paste("Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/dataset/fold_keel/",filename,"_",as.character(i),"th_test.csv",sep=""),row.names = F)
}
}
source('Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/experiment/make5fold.R', echo=TRUE)
source('Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/Determinine and SMOTE.R', echo=F)
setwd("Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/dataset/fold_keel")
library("unbalanced")
library("FNN")
l <- dir()
l
set <- dir()
set
setwd("Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/dataset/fold")
set <- dir()
set
set <- set[grep("csv",set)]
set
setwd("Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/dataset/keel")
set <- set[grep("csv",set)]
set
dir()
set <- dir()
source('Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/experiment/5fold_AUS_determineK.R', echo=TRUE)
setwd("Z:/공동작업/dataset")
dir()
set <- c("4 letter-recognition.csv"
,"6 pendigits.csv"
,"7 yeast.csv"
,"8 winequality-white.csv"
,"9 shuttle.csv"
,"10 sensor_readings_24.csv"
,"11 cmc.csv"
,"14 abalone.csv"
,"15 biodeg.csv"
,"19 magic04.csv"
,"21 data_banknote_authentication.csv"
,"24 data_banknote_authentication-suj.csv"
,"25 segmentation.test.csv"
,"26 page-blocks.data - negative-text.csv"
,"27 page-blocks.data - positive-horiz. line.csv"
,"29 sensor_readings_2L.csv"
,"30 sensor_readings_2R.csv"
,"31 sensor_readings_4L.csv"
,"32 sensor_readings_4R.csv"
,"33 sensor_readings_24L.csv"
,"34 sensor_readings_24R.csv"
,"37 Wholesale customers data.csv"
,"39 zoo.csv"
,"41 tae.csv"
,"42 turkiye-student-evaluation_generic.csv"
,"44 glass.csv"
,"45 magic04.csv")
s<-1
filename <- set[s]
data <- read.csv(file = filename,h=F)
head(data)
for(s in 1:length(set)){
filename <- set[s]
data <- read.csv(file = filename,h=F)
head(data,1)
}
for(s in 1:length(set)){
filename <- set[s]
data <- read.csv(file = filename,h=F)
print(head(data,1))
}
for(s in 1:length(set)){
filename <- set[s]
data <- read.csv(file = filename,h=F)
print(filename)
print(head(data,1))
}
for(s in 1:length(set)){
filename <- set[s]
data <- read.csv(file = filename,h=F)
print(filename)
print(head(data,1))
}
for(s in 1:length(set)){
filename <- set[s]
data <- read.csv(file = filename,h=F)
print(filename)
print(head(data,1))
}
s<-2
filename <- set[s]
data <- read.csv(file = filename,h=F)
print(filename)
print(head(data,1))
paste("X",1:(ncol(data)-1))
paste("X",1:(ncol(data)-1),sep="")
c(paste("X",1:(ncol(data)-1),sep=""),Y)
c(paste("X",1:(ncol(data)-1),sep=""),"Y")
source('Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/experiment/make5fold.R', echo=TRUE)
source('Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/Determinine and SMOTE.R', echo=F)
setwd("Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/dataset/fold")
library("unbalanced")
library("FNN")
source('Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/experiment/SMOTE_exo.R', echo=TRUE)
source('Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/Determinine and SMOTE.R', echo=F)
setwd("Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/dataset/fold_keel")
library("unbalanced")
library("FNN")
l <- dir()
l
setwd("Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/dataset/keel")
set <-dir()
set
source('Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/Determinine and SMOTE.R', echo=F)
setwd("Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/dataset/fold_keel")
library("unbalanced")
library("FNN")
source('Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/experiment/SMOTE_exo.R', echo=TRUE)
warnings()
set
l <- dir()
l
s<-1
setname <- set[s]
setname
setwd("Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/dataset/keel")
folds <- matrix(l[grep(setname,l)],ncol = 2,byrow = T)
folds
trainingsets <- list()
testsets <- list()
for(i in 1:nrow(folds)){
trainingsets[[i]] <- read.csv(folds[i,2])
testsets[[i]] <- read.csv(folds[i,1])
}
setwd("Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/dataset/fold_keel")
for(i in 1:nrow(folds)){
trainingsets[[i]] <- read.csv(folds[i,2])
testsets[[i]] <- read.csv(folds[i,1])
}
col <- ncol(trainingsets[[1]])
if(sum(trainingsets[[1]][,col])>500)
next
print(c(sum(trainingsets[[1]][,col]),ncol(trainingsets[[1]])))
smote_result <- array(NA,dim = c(5,30,4))
source('Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/experiment/SMOTE_exo.R', echo=TRUE)
ser_sm <- matrix(NA,nrow=0,ncol=4)
kn <- sample(sum(trainingsets[[1]][,col])-1,1)
t <- table(trainingsets[[i]][,col])
N<-floor(t[1]/t[2])*100
t
max(t)
source('Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/experiment/SMOTE_exo.R', echo=TRUE)
source('Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/experiment/ADASYN_exo.R', echo=TRUE)
source('Z:/공동작업/Imbalance classification/Experiment/code/ADASYN.R', echo=TRUE)
source('Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/experiment/ADASYN_exo.R', echo=TRUE)
source('Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/experiment/ADASYN_exo.R', echo=TRUE)
source('Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/Determinine and SMOTE.R', echo=F)
library("unbalanced")
library("FNN")
setwd("Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/dataset/keel")
set <- dir()
setwd("Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/dataset/fold_keel")
l <- dir()
s<-1
setname <- set[s]
folds <- matrix(l[grep(setname,l)],ncol = 2,byrow = T)
trainingsets <- list()
testsets <- list()
folds
trainingsets <- list()
testsets <- list()
for(i in 1:nrow(folds)){
trainingsets[[i]] <- read.csv(folds[i,2])
testsets[[i]] <- read.csv(folds[i,1])
}
col <- ncol(trainingsets[[1]])
if(sum(trainingsets[[1]][,col])>500)
next
print(c(sum(trainingsets[[1]][,col]),ncol(trainingsets[[1]])))
smote_result <- array(NA,dim = c(5,30,4))
sum(trainingsets[[1]][,col])
sum(trainingsets[[2]][,col])
sum(trainingsets[[1]][,col])
sum(trainingsets[[1]][,col])*0.75
115
sample(115,10)
sample(115,115)
uniqe(sample(115,115))
unique(sample(115,115))
length(unique(sample(115,115)))
length(unique(sample(115,115,replace = T)))
115/2
length(unique(sample(115,80,replace = T)))
length(unique(sample(115,80,replace = T)))
length(unique(sample(115,80,replace = T)))
log(x = 0.1,base = 114/115)
sum(trainingsets[[1]][,col])
log(x = 0.1,base = (sum(trainingsets[[1]][,col])-1)/sum(trainingsets[[1]][,col]))
cov <- round(log(x = 0.1,base = (sum(trainingsets[[1]][,col])-1)/sum(trainingsets[[1]][,col])))
cov
source('Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/experiment/SMOTE_exp_all_k.R', echo=TRUE)
source('Z:/개인사용자/윤재섭/DETERMINE K OF SMOTE BY AUC/experiment/SMOTE_exp_all_k.R', echo=TRUE)
